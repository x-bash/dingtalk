# @src http param

# author:       Li Junhao           edwin.jh.lee@gmail.com    edwinjhlee.github.io
# maintainer:   Li Tinghui

if ! declare -f xrc 1>/dev/null; then
    : introduce the boot file
fi

xrc std/param std/oo

x.debug.init dingtalk

# Reference
# https://ding-doc.dingtalk.com/document#/isv-dev-guide/message-types-and-data-format#topic-2618201

dingtalk.bot.endpoint() {
    local O=${O:-default} endpoint

    if [ -n "$1" ]; then # set
        param.default "app/dingtalk.bot/$O" endpoint "$1"
        return 0
    fi

    # get
    endpoint="$(param.default "app/dingtalk.bot/$O" endpoint)"
    if [ -z "$endpoint" ]; then
        dingtalk.bot.config.load && endpoint="$(param.default "app/dingtalk.bot/$O" endpoint)"
    fi

    [ -z "$endpoint" ] && return 1
    echo "$endpoint"
}

# dingtalk.bot.endpoint "$DINGTALK_ENDPOINT"

dingtalk.bot.make() {
    local O=${1:?Provide bot name}
    if [ -n "$2" ]; then
        dingtalk.bot.endpoint "$2"
    fi
}

dingtalk.bot.new() {
    oo.create_new_function dingtalk.bot "$@"
}

dingtalk.bot.config.save() {
    local O=${O:-default}
    param.default.save "app/dingtalk.bot/$O" "${1:?$HOME/.x-cmd.com/config/x-bash/.dingtalk.config}"
}

dingtalk.bot.config.load() {
    local O=${O:-default}
    param.default.load "app/dingtalk.bot/$O" "${1:?$HOME/.x-cmd.com/config/x-bash/.dingtalk.config}"
}

# shellcheck disable=SC2120
dingtalk.bot.send() {
    local O=${O:-default}
    local json="$1"
    if [ -z "$json" ]; then
        json="$(cat)"
    fi

    eval curl "$(dingtalk.bot.endpoint)" \
        -H 'Content-Type:application/json' \
        -d "$json"

    dingtalk.debug curl "$(dingtalk.bot.endpoint)" \
        -H 'Content-Type:application/json' \
        -d "$json"
}

dingtalk.bot.send_text_msg() {
    param '
        text         "Provide text" =str
        at=""      "The cell phone number of the person being @ (in the text content should have @ cell phone number)" =~[,] \\+?[0-9]+
        --atall -a "Notify all member of the group"
    '

    local allMobiles i
    for i in "${at[@]}"; do
        allMobiles+=,\"$i\"
    done
    allMobiles=${allMobiles:1}

    if [ "$atall" ]; then
        atall=true
    else 
        atall=false
    fi

    dingtalk.bot.send <<EOM
'{
    "msgtype": "text",
    "text": {
        "content": "$text"
    },
    "at": {
        "atMobiles": [ ${allMobiles} ],
        "isAtAll": $atall
    }
}'
EOM
}

dingtalk.bot.send_link_msg() {
    param '
        title   "Provide title"     =str
        text    "Provide text"      =str
        picurl  "Provide picurl"    =str
        msgurl  "Provide msgurl"    =str
    '

    dingtalk.bot.send <<EOM
'{
    "msgtype": "link",
    "link": {
        "text": "${text}",
        "title": "${title}",
        "picUrl": "${picurl}",
        "messageUrl": "${msgurl}"
    }
}'
EOM

}

dingtalk.bot.send_markdown_msg() {
    param '
        title      "Provide title"
        text       "Provide text"
        at=""      "The cell phone number of the person being @ (in the text content should have @ cell phone number)" =~[,] \\+?[0-9]+
        --atall -a "Notify all member of the group"
    '

    local allMobiles i
    for i in "${at[@]}"; do
        allMobiles+=,\"$i\"
    done
    allMobiles=${allMobiles:1}

    if [ "$atall" ]; then
        atall=true
    else 
        atall=false
    fi

    dingtalk.bot.send <<EOM
'{
    "msgtype": "markdown",
    "markdown": {
        "title": "$title",
        "text": "$text"
    },
    "at": {
        "atMobiles": [ ${allMobiles} ],
        "isAtAll": $atall
    }
}'
EOM
}

dingtalk.bot.send_action_card_msg() {
    param '
        title           "Provide title"
        text            "Provide text"
        --atall         "Notify all member of the group"
        orientation=vertical   "Buttons Placenment. default is vertical" == vertical horizontal
        linktitle       "Link title"
        linkurl         "link url"
    '

    if [ "$orientation" = "horizontal" ]; then
        orientation=1
    else 
        orientation=0
    fi

    local O=${O:-default}
    dingtalk.bot.send <<EOM
'{
    "msgtype": "actionCard",
    "actionCard": {
        "title": "$title",
        "text": "$text",
        "btnOrientation": "$orientation",
        "singleTitle" : "$linktitle",
        "singleURL" : "$linkurl"
    },
    "at": {
        "isAtAll": $atall
    }
}'
EOM

}

dingtalk.bot.send_multiple_action_card_msg() {

    param '
        title         "Provide title"
        text          "Provide text"
        orientation=0 "button orientation, horizontal, default is vertical" int vertical 1
        ... "Provide multiple action card in following format. [ <title> <action-url> ] ..."
    '

    local i j actionTitle url item
    local all=()
    for ((i = 0; i < "${#_rest_argv[@]}"; i += 2)); do
        actionTitle=${_rest_argv[i]}
        ((j = i + 1))
        url=${_rest_argv[j]}
        item="{ \"title\": \"$actionTitle\", \"actionURL\": \"$url\" }"
        all+=("$item")
    done

    local allMobiles i
    for i in "${at[@]}"; do
        allMobiles+=,\"$i\"
    done
    allMobiles=${allMobiles:1}

    local IFS=','
    dingtalk.bot.send <<EOM
'{
    "msgtype": "actionCard",
    "actionCard": {
        "title": "${title:?"Please provide content"}",
        "text": "${text:?"Please provide content"}",
        "btnOrientation": "${orientation}",
        "btns": [
            ${all[*]}
        ]
    },
    "at": {
        "atMobiles": [ "${allMobiles}" ]
    }
}'
EOM

}

dingtalk.bot.feed_card_msg() {
    param ''

    for ((i = 0; i < "${#_rest_argv[@]}"; i += 3)); do
        actionTitle=${_rest_argv[i]}
        ((j = i + 1))
        msgUrl=${_rest_argv[j]}
        ((k = j + 1))
        picUrl=${_rest_argv[k]}
        item="{ \"title\": \"$actionTitle\", \"messageURL\": \"$msgUrl\", \"picURL\": \"$picUrl\" }"
        all+=("$item")
    done

    dingtalk.bot.send <<EOM
'{
    "msgtype": "feedCard",
    "feedCard": {
        "links": [
            ${all[*]}
        ]
    }
}'
EOM

}
